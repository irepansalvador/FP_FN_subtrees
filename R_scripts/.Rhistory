## For divisions 10-16 UNWEIGHTED
all_results = NULL
for (i in 1:140)  ## for each output file (which contains 50 results)
{
ii = 1 + (500 * i) - 500
my.result = read.table(file = paste("Accuracy/ALL_results/CompareTree_Unweighted_10-16div_ROOT.e6187248.",ii,sep = ""),
colClasses = c("numeric") )
# get the mean of the 10 samples
my.sample.result = matrix(data = my.result[1:500,1],nrow = 10,ncol = 50,byrow = FALSE)
my.result = apply(X = my.sample.result, MARGIN = 2, FUN = mean)
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- c(all_results,my.result)}
}
UNW_GESTALT2 <- matrix(all_results[1:7000], nrow = 1000, ncol= 7, byrow=FALSE)
UNW_GESTALT <- cbind(UNW_GESTALT,UNW_GESTALT2)
#-----------------  PLOT --------------------------------
# For cell divisions
boxplot(UNW_GESTALT,xlab = "# cell divisions",boxwex = 0.6,ylim= c(0,1),axes=F)
axis(1,stages[1:15],at = 1:15,cex.axis= 0.8)
axis(2,at = seq(from= 0.0, to = 1, by = 0.2),cex.axis= 0.8, las = 1)
axis(2,at = seq(from= 0.0, to = 1, by = 0.1),cex.axis= 0.8, las = 1,labels = F,lwd = 0.5)
points(x = 1:15, y = apply(X = UNW_GESTALT,MARGIN = 2,mean), lwd = 2, col = "darkgreen",pch=5)
lines(x = 1:15, y = apply(X = UNW_GESTALT,MARGIN = 2,mean), lwd = 2, col = "darkgreen")
title("GESTALT (Unweighted)")
grid()
box()
apply(X = UNW_GESTALT,MARGIN = 2,mean)
# --------------- OUTPUT ------------------------------------
colnames(UNW_GESTALT) <- stages
write.csv(x = UNW_GESTALT,file = "Accuracy/GESTALT_60states_Unweighted_Accuracy_ROOT.csv")
# Packages required
require(lattice)
## Set working directory
setwd("/home/irepan/Desktop/Github/GESTALT_60states/")
## declare important variables
stages <- 2:16
samples <- 1:1000
Ncells <- c(2**(2:16))
# --------- Open results from Cluster output
## For divisions 02-09 UNWEIGHTED
all_results = NULL
for (i in 1:160)  ## for each output file (which contains 50 results)
{
ii = 1 + (50 * i) - 50
## open each results file and calculate mean
my.result = read.table(file = paste("Accuracy/ALL_results/CompareTree_Unweighted_02-09div_ROOT.e6187105.",ii,sep = ""),
colClasses = c("numeric") )
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- rbind(all_results,my.result)}
}
# Packages required
require(lattice)
## Set working directory
setwd("/home/irepan/Desktop/Github/GESTALT_60states/")
## declare important variables
stages <- 2:16
samples <- 1:1000
Ncells <- c(2**(2:16))
# --------- Open results from Cluster output
## For divisions 02-09 UNWEIGHTED
all_results = NULL
for (i in 1:160)  ## for each output file (which contains 50 results)
{
ii = 1 + (50 * i) - 50
## open each results file and calculate mean
my.result = read.table(file = paste("Accuracy/ALL_results_02-09div/CompareTree_Unweighted_02-09div_ROOT.e3775877.",ii,sep = ""),
colClasses = c("numeric") )
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- rbind(all_results,my.result)}
}
UNW_GESTALT <- matrix(all_results[1:8000,1], nrow = 1000, ncol= 8, byrow=FALSE)
## For divisions 10-16 UNWEIGHTED
all_results = NULL
for (i in 1:140)  ## for each output file (which contains 50 results)
{
ii = 1 + (500 * i) - 500
my.result = read.table(file = paste("Accuracy/ALL_results_10-16div/CompareTree_Unweighted_10-16div_ROOT.e3758725.",ii,sep = ""),
colClasses = c("numeric") )
# get the mean of the 10 samples
my.sample.result = matrix(data = my.result[1:500,1],nrow = 10,ncol = 50,byrow = FALSE)
my.result = apply(X = my.sample.result, MARGIN = 2, FUN = mean)
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- c(all_results,my.result)}
}
UNW_GESTALT2 <- matrix(all_results[1:7000], nrow = 1000, ncol= 7, byrow=FALSE)
UNW_GESTALT <- cbind(UNW_GESTALT,UNW_GESTALT2)
#-----------------  PLOT --------------------------------
# For cell divisions
boxplot(UNW_GESTALT,xlab = "# cell divisions",boxwex = 0.6,ylim= c(0,1),axes=F)
axis(1,stages[1:15],at = 1:15,cex.axis= 0.8)
axis(2,at = seq(from= 0.0, to = 1, by = 0.2),cex.axis= 0.8, las = 1)
axis(2,at = seq(from= 0.0, to = 1, by = 0.1),cex.axis= 0.8, las = 1,labels = F,lwd = 0.5)
points(x = 1:15, y = apply(X = UNW_GESTALT,MARGIN = 2,mean), lwd = 2, col = "darkgreen",pch=5)
lines(x = 1:15, y = apply(X = UNW_GESTALT,MARGIN = 2,mean), lwd = 2, col = "darkgreen")
title("GESTALT (Unweighted)")
grid()
box()
apply(X = UNW_GESTALT,MARGIN = 2,mean)
# Packages required
require(lattice)
## Set working directory
setwd("/home/irepan/Desktop/Github/FAST_Embryo/R_scripts/")
## declare important variables
stages <- 2:16
samples <- 1:1000
Ncells <- c(2**(2:16))
# --------- Open results from Cluster output
## For divisions 02-09 UNWEIGHTED
all_results = NULL
# --------- Open results from Cluster output
## For divisions 02-09 UNWEIGHTED
all_results = NULL
for (i in 1:160)  ## for each output file (which contains 50 results)
{
ii = 1 + (50 * i) - 50
## open each results file and calculate mean
my.result = read.table(file = paste("../InterTarget_3nd/Accuracy/ALL_results/CompareTree_Unweighted_02-09div_ROOT.e6176810.",ii,sep = ""),
colClasses = c("numeric") )
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- rbind(all_results,my.result)}
}
UNW_InterT <- matrix(all_results[1:8000,1], nrow = 1000, ncol= 8, byrow=FALSE)
## For divisions 10-16 UNWEIGHTED
all_results = NULL
## For divisions 10-16 UNWEIGHTED
all_results = NULL
for (i in 1:140)  ## for each output file (which contains 50 results)
{
ii = 1 + (500 * i) - 500
my.result = read.table(file = paste("../InterTarget_3nd/Accuracy/ALL_results/CompareTree_Unweighted_10-16div_ROOT.e6186491.",ii,sep = ""),
colClasses = c("numeric") )
# get the mean of the 10 samples
my.sample.result = matrix(data = my.result[1:500,1],nrow = 10,ncol = 50,byrow = FALSE)
my.result = apply(X = my.sample.result, MARGIN = 2, FUN = mean)
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- c(all_results,my.result)}
}
UNW_InterT2 <- matrix(all_results[1:7000], nrow = 1000, ncol= 7, byrow=FALSE)
UNW_InterT <- cbind(UNW_InterT,UNW_InterT2)
#-----------------  PLOT --------------------------------
# For cell divisions
boxplot(UNW_InterT,xlab = "# cell divisions",boxwex = 0.6,ylim= c(0,1),axes=F)
axis(1,stages[1:15],at = 1:15,cex.axis= 0.8)
axis(2,at = seq(from= 0.0, to = 1, by = 0.2),cex.axis= 0.8, las = 1)
axis(2,at = seq(from= 0.0, to = 1, by = 0.1),cex.axis= 0.8, las = 1,labels = F,lwd = 0.5)
points(x = 1:15, y = apply(X = UNW_InterT,MARGIN = 2,mean), lwd = 2, col = "darkgreen",pch=5)
lines(x = 1:15, y = apply(X = UNW_InterT,MARGIN = 2,mean), lwd = 2, col = "darkgreen")
title("No Intertarget (Unweighted)")
grid()
box()
apply(X = UNW_InterT,MARGIN = 2,mean)
############# WEIGHTED TREES ##################################
# --------- Open results from Cluster output
## For divisions 02-09 WEIGHTED
all_results = NULL
for (i in 1:160)  ## for each output file (which contains 50 results)
{
ii = 1 + (50 * i) - 50
## open each results file and calculate mean
my.result = read.table(file = paste("../InterTarget_3nd/Accuracy/ALL_results/CompareTree_Weighted_02-09div_ROOT.e6188788.",ii,sep = ""),
colClasses = c("numeric") )
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- rbind(all_results,my.result)}
}
WEIG_InterT <- matrix(all_results[1:8000,1], nrow = 1000, ncol= 8, byrow=FALSE)
## For divisions 10-16 UNWEIGHTED
all_results = NULL
## For divisions 10-16 UNWEIGHTED
all_results = NULL
for (i in 1:140)  ## for each output file (which contains 50 results)
{
ii = 1 + (500 * i) - 500
my.result = read.table(file = paste("../InterTarget_3nd/Accuracy/ALL_results/CompareTree_Weighted_10-16div_ROOT.e6186490.",ii,sep = ""),
colClasses = c("numeric") )
# get the mean of the 10 samples
my.sample.result = matrix(data = my.result[1:500,1],nrow = 10,ncol = 50,byrow = FALSE)
my.result = apply(X = my.sample.result, MARGIN = 2, FUN = mean)
if (i == 1) {all_results  = my.result}
if (i > 1)  {all_results <- c(all_results,my.result)}
}
WEIG_InterT2 <- matrix(all_results[1:7000], nrow = 1000, ncol= 7, byrow=FALSE)
WEIG_InterT <- cbind(WEIG_InterT,WEIG_InterT2)
##############  PLOT ##########################################
# For cell divisions
boxplot(WEIG_InterT,xlab = "# cell divisions",boxwex = 0.6,ylim= c(0,1),axes=F)
axis(1,stages[1:15],at = 1:15,cex.axis= 0.8)
axis(2,at = seq(from= 0.0, to = 1, by = 0.2),cex.axis= 0.8, las = 1)
axis(2,at = seq(from= 0.0, to = 1, by = 0.1),cex.axis= 0.8, las = 1,labels = F,lwd = 0.5)
points(x = 1:15, y = apply(X = WEIG_InterT,MARGIN = 2,mean), lwd = 2, col = "darkred",pch=5)
lines(x = 1:15, y = apply(X = WEIG_InterT,MARGIN = 2,mean), lwd = 2, col = "darkred")
title("No Intertarget (Weighted)")
grid()
box()
apply(X = WEIG_InterT,MARGIN = 2,mean)
# --------------- OUTPUT ------------------------------------
colnames(UNW_InterT) <- stages
write.csv(x = UNW_InterT,file = "./../InterTarget_3nd/Accuracy/InterTarget_Unweighted_Accuracy_ROOT.csv")
colnames(WEIG_InterT) <- stages
write.csv(x = WEIG_InterT,file = "./../InterTarget_3nd/Accuracy/InterTarget_Weighted_Accuracy.csv")
require(lattice)
require(plotrix)
require(vioplot)
require(base)
require(ggplot2)
require(RColorBrewer)
## Set working directory
setwd("/home/irepan/Desktop/Github/FAST_Embryo/R_scripts/")
## declare important variables
stages <- 2:16
st_plot <- stages - 1
samples <- 1:1000
Ncells <- c(2**(2:16))
Ncells2 <- sprintf("%.1f",Ncells/1000)
N = 1000
## open dateframes ###############################
##Accuracies
## ---- SEQ No InterTarget
SEQ_NoInt_UnW_Acc = read.table(file = "../No_InterTarget/Accuracy/No_Intertarget_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
SEQ_NoInt_WEIG_Acc = read.table(file = "../No_InterTarget/Accuracy/No_Intertarget_Weighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
## ---- SEQ InterTarget
SEQ_InterT_UnW_Acc = read.table(file = "../InterTarget_3nd/Accuracy/InterTarget_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
SEQ_InterT_WEIG_Acc = read.table(file = "../InterTarget_3nd/Accuracy/InterTarget_Weighted_Accuracy.csv",
header = T,row.names = 1,sep = ",",check.names = F)
## ---- GESTALT
GESTALT_Acc = read.table(file = "../../GESTALT_60states/Accuracy/GESTALT_60states_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
Comp_matrix = as.data.frame(matrix(data = NA,nrow = 1000,ncol = 5))
colnames(Comp_matrix) = c("No InterT Unw",
"No InterT Weighted",
"InterT Unw",
"InterT Weighted",
"Gestalt")
Comp_matrix$`No InterT Unw`  = SEQ_NoInt_UnW_Acc[,15]
Comp_matrix$`No InterT Weighted`= SEQ_NoInt_WEIG_Acc[,15]
Comp_matrix$`InterT Unw`     = SEQ_InterT_UnW_Acc[,15]
Comp_matrix$`InterT Weighted`    = SEQ_InterT_WEIG_Acc[,15]
Comp_matrix$Gestalt       = GESTALT_Acc[,15]
my.scenarios <-c("FAST Unweighted",
"FAST Weighted",
"FAST Unweighted",
"FAST Weighted",
"Gestalt")
Factor_matrix <- as.data.frame(matrix(data = NA, nrow = 5000,ncol = 2))
Factor_matrix[,1] <- c(Comp_matrix[,1],Comp_matrix[,2],Comp_matrix[,3],Comp_matrix[,4],Comp_matrix[,5])
Factor_matrix[,2] <- rep(x = my.scenarios, each = 1000)
Factor_matrix[,3] <- c(rep("NO", 2000), rep("YES",3000))
colnames(Factor_matrix) = c("Accuracy", "Simulation","InterTarget")
summary(Factor_matrix)
Factor_matrix$Simulation  <- factor(Factor_matrix$Simulation, levels = c("FAST Weighted","FAST Unweighted","Gestalt"))
Factor_matrix$InterTarget <- factor(Factor_matrix$InterTarget, levels = unique(Factor_matrix$InterTarget) )
# The palette with grey (from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/):
cbbPalette <- c( #"#56B4E9", # blue
"#D55E00", # orange
"#009E73", # green
#"#E69F00", # yellow
"#000000",
"#F0E442", "#0072B2", "#CC79A7")
# main plot caller
p <- ggplot(Factor_matrix, aes(factor(Simulation), Accuracy)) +
# violin parameters (colours, fill)
geom_violin(scale = "width",aes(colour = factor(Simulation)), size =1.1) +
# plot panels
facet_grid(. ~ InterTarget, scales = "free") +
# use colour brewer pallete
# scale_color_brewer(palette="Set1") +
# To use for line and point colors, add
scale_colour_manual(values=cbbPalette) +
# plot median
stat_summary(fun.y=mean, geom="point", shape=23, size=1.5, colour="black", fill = "white")+
# white bg
theme_classic() + ylim(0,1) +
# set xlabs
labs(title = "Inter-Target deletions", x = "",y = "Accuracy (RF)", colour= "") +
# tune axis
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size=9)) +
# plot L box
theme(axis.line = element_line(size = 0.5, linetype = "solid"),
axis.ticks.x=element_blank()) +
# general font size
theme(text = element_text(size=13)) +
# plot grid
theme(panel.grid.major = element_line(colour = "grey",linetype = 3))
p
require(lattice)
require(plotrix)
require(vioplot)
require(base)
require(ggplot2)
require(RColorBrewer)
## Set working directory
setwd("/home/irepan/Desktop/Github/FAST_Embryo/R_scripts/")
## declare important variables
stages <- 2:16
st_plot <- stages - 1
samples <- 1:1000
Ncells <- c(2**(2:16))
Ncells2 <- sprintf("%.1f",Ncells/1000)
N = 1000
## open dateframes ###############################
##Accuracies
## ---- SEQ No InterTarget
SEQ_NoInt_UnW_Acc = read.table(file = "../No_InterTarget/Accuracy/No_Intertarget_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
SEQ_NoInt_WEIG_Acc = read.table(file = "../No_InterTarget/Accuracy/No_Intertarget_Weighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
## ---- SEQ InterTarget
SEQ_InterT_UnW_Acc = read.table(file = "../InterTarget_3nd/Accuracy/InterTarget_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
SEQ_InterT_WEIG_Acc = read.table(file = "../InterTarget_3nd/Accuracy/InterTarget_Weighted_Accuracy.csv",
header = T,row.names = 1,sep = ",",check.names = F)
## ---- GESTALT
GESTALT_Acc = read.table(file = "../../GESTALT_60states/Accuracy/GESTALT_60states_Unweighted_Accuracy_ROOT.csv",
header = T,row.names = 1,sep = ",",check.names = F)
### Compare only 16 cell divisions
Comp_matrix = as.data.frame(matrix(data = NA,nrow = 1000,ncol = 5))
colnames(Comp_matrix) = c("No InterT Unw",
"No InterT Weighted",
"InterT Unw",
"InterT Weighted",
"Gestalt")
Comp_matrix$`No InterT Unw`  = SEQ_NoInt_UnW_Acc[,15]
Comp_matrix$`No InterT Weighted`= SEQ_NoInt_WEIG_Acc[,15]
Comp_matrix$`InterT Unw`     = SEQ_InterT_UnW_Acc[,15]
Comp_matrix$`InterT Weighted`    = SEQ_InterT_WEIG_Acc[,15]
Comp_matrix$Gestalt       = GESTALT_Acc[,15]
#
my.scenarios <-c("FAST Unweighted",
"FAST Weighted",
"FAST Unweighted",
"FAST Weighted",
"Gestalt")
Factor_matrix <- as.data.frame(matrix(data = NA, nrow = 5000,ncol = 2))
Factor_matrix[,1] <- c(Comp_matrix[,1],Comp_matrix[,2],Comp_matrix[,3],Comp_matrix[,4],Comp_matrix[,5])
Factor_matrix[,2] <- rep(x = my.scenarios, each = 1000)
Factor_matrix[,3] <- c(rep("NO", 2000), rep("YES",3000))
colnames(Factor_matrix) = c("Accuracy", "Simulation","InterTarget")
summary(Factor_matrix)
Factor_matrix$Simulation  <- factor(Factor_matrix$Simulation, levels = c("FAST Weighted","FAST Unweighted","Gestalt"))
Factor_matrix$InterTarget <- factor(Factor_matrix$InterTarget, levels = unique(Factor_matrix$InterTarget) )
# The palette with grey (from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/):
cbbPalette <- c("#D55E00",  "#E69F00", "#000000",  "#009E73","#56B4E9", "#F0E442", "#0072B2", "#CC79A7")
cbbPalette <- c( #"#56B4E9", # blue
"#D55E00", # orange
"#009E73", # green
#"#E69F00", # yellow
"#000000",
"#F0E442", "#0072B2", "#CC79A7")
# main plot caller
p <- ggplot(Factor_matrix, aes(factor(Simulation), Accuracy)) +
# violin parameters (colours, fill)
geom_violin(scale = "width",aes(colour = factor(Simulation)), size =1.1) +
# plot panels
facet_grid(. ~ InterTarget, scales = "free_x", space = "free_x") +
# use colour brewer pallete
# scale_color_brewer(palette="Set1") +
# To use for line and point colors, add
scale_colour_manual(values=cbbPalette) +
# plot median
stat_summary(fun.y=mean, geom="point", shape=23, size=1.5, colour="black", fill = "white")+
# white bg
theme_classic() + ylim(0,1) +
# set xlabs
labs(title = "Target dropouts", x = "",y = "Accuracy (RF)", colour= "") +
# tune axis
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size=9)) +
# plot L box
theme(axis.line = element_line(size = 0.5, linetype = "solid"),
axis.ticks.x=element_blank()) +
# general font size
theme(text = element_text(size=13)) +
# plot grid
theme(panel.grid.major = element_line(colour = "grey",linetype = 3))
p
svg(filename = "All_scenarios_16div_violinplot_ggplot.svg",width = 4.2,height =3)
# main plot caller
p <- ggplot(Factor_matrix, aes(factor(Simulation), Accuracy)) +
# violin parameters (colours, fill)
geom_violin(scale = "width",aes(colour = factor(Simulation)), size =1.1) +
# plot panels
facet_grid(. ~ InterTarget, scales = "free_x", space = "free_x") +
# use colour brewer pallete
# scale_color_brewer(palette="Set1") +
# To use for line and point colors, add
scale_colour_manual(values=cbbPalette) +
# plot median
stat_summary(fun.y=mean, geom="point", shape=23, size=1.5, colour="black", fill = "white")+
# white bg
theme_classic() + ylim(0,1) +
# set xlabs
labs(title = "Target dropouts", x = "",y = "Accuracy (RF)", colour= "") +
# tune axis
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size=9)) +
# plot L box
theme(axis.line = element_line(size = 0.5, linetype = "solid"),
axis.ticks.x=element_blank()) +
# general font size
theme(text = element_text(size=13)) +
# plot grid
theme(panel.grid.major = element_line(colour = "grey",linetype = 3))
p
dev.off()
# Packages required
require(lattice)
require(reshape2)
## Set working directory
setwd("/home/irepan/Desktop/Github/FP_FN_subtrees/R_scripts/")
## declare important variables
divs <- 2:16
trees <- 1:1000
all_results = matrix(data = NA, nrow = length(trees), ncol = length(divs))
colnames(all_results) <- paste(divs,"div",sep = "")
rownames(all_results) <- paste("tree",trees,sep = "")
for (d in divs)
{
for (i in trees)  ## for each output file (which contains 50 results)
{
t = sprintf("%.4d", i)
my.result = read.table(file = paste("../InterTarget_3nd/4cell_trees/",
sprintf("%.2d", d), "div_32_targets_60_states_",
t,"rep_FAST-4cells_Acc",sep = ""),
colClasses = c("numeric") )
if (d == 2)   {all_results[i,d-1]  = my.result[,1] }
if (d > 2)    {all_results[i,d-1]  = mean(my.result[,1])}
}
}
my_means = apply(all_results, 2, function(x) mean(x,na.rm= F))
boxplot(all_results, outline = F, boxwex = 0.6, ylim = c(0,1),
las = 3, main = "4cell-trees accuracy\n(InterTarget)",
xlab = "Time point", ylab = "Accuracy (RF)")
points(my_means, pch = 5, col = "red", lwd= 2)
lines(my_means, pch = 5, col = "red", lwd = 2)
grid()
svg(filename = "InterTarget_4cell_analysis_1Ksims.svg",width = 5,height = 4)
boxplot(all_results, outline = F, boxwex = 0.6, ylim = c(0,1),
las = 3, main = "4cell-trees accuracy\n(InterTarget)",
xlab = "Time point", ylab = "Accuracy (RF)")
points(my_means, pch = 5, col = "red", lwd= 2)
lines(my_means, pch = 5, col = "red", lwd = 2)
grid()
dev.off()
# Packages required
require(lattice)
require(reshape2)
## Set working directory
setwd("/home/irepan/Desktop/Github/FP_FN_subtrees/R_scripts/")
## declare important variables
divs <- 2:16
trees <- 1:1000
all_results = matrix(data = NA, nrow = length(trees), ncol = length(divs))
colnames(all_results) <- paste(divs,"div",sep = "")
rownames(all_results) <- paste("tree",trees,sep = "")
for (d in divs)
{
for (i in trees)  ## for each output file (which contains 50 results)
{
t = sprintf("%.4d", i)
my.result = read.table(file = paste("../InterTarget_3nd/4cell_trees/",
sprintf("%.2d", d), "div_32_targets_60_states_",
t,"rep_FAST-4cells_Acc",sep = ""),
colClasses = c("numeric") )
if (d == 2)   {all_results[i,d-1]  = my.result[,1] }
if (d > 2)    {all_results[i,d-1]  = mean(my.result[,1])}
}
}
my_means = apply(all_results, 2, function(x) mean(x,na.rm= F))
svg(filename = "InterTarget_4cell_analysis_1Ksims.svg",width = 5,height = 4)
boxplot(all_results, outline = F, boxwex = 0.6, ylim = c(0,1),
las = 3, main = "4cell-trees accuracy\n(InterTarget)",
xlab = "Time point", ylab = "Accuracy (RF)")
points(my_means, pch = 5, col = "red", lwd= 2)
lines(my_means, pch = 5, col = "red", lwd = 2)
grid()
dev.off()
# Packages required
require(lattice)
require(reshape2)
## Set working directory
setwd("/home/irepan/Desktop/Github/FP_FN_subtrees/R_scripts/")
## declare important variables
divs <- 2:16
trees <- 1:1000
all_results = matrix(data = NA, nrow = length(trees), ncol = length(divs))
colnames(all_results) <- paste(divs,"div",sep = "")
rownames(all_results) <- paste("tree",trees,sep = "")
for (d in divs)
{
for (i in trees)  ## for each output file (which contains 50 results)
{
t = sprintf("%.4d", i)
my.result = read.table(file = paste("../GESTALT/4cell_trees/GESTALT_",
sprintf("%.2d", d), "div_10_targets_60_states_",
t,"rep-4cells_Acc",sep = ""),
colClasses = c("numeric") )
if (d == 2)   {all_results[i,d-1]  = my.result[,1] }
if (d > 2)    {all_results[i,d-1]  = mean(my.result[,1])}
}
}
my_means = apply(all_results, 2, function(x) mean(x,na.rm= T))
svg(filename = "GESTALT_4cell_analysis_1Ksims.svg",width = 5,height = 4)
boxplot(all_results, outline = F, boxwex = 0.6, ylim = c(0,1),
las = 3, main = "4cell-trees accuracy\n(GESTALT)",
xlab = "Time point", ylab = "Accuracy (RF)")
points(my_means, pch = 5, col = "red", lwd= 2)
lines(my_means, pch = 5, col = "red", lwd = 2)
grid()
dev.off()
